% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_helpers.R
\name{mod_helpers}
\alias{mod_helpers}
\alias{pull_mod_rank}
\alias{pull_mod_best}
\alias{pull_mod_coeff}
\alias{pull_mod_fit}
\alias{pull_mod_coeff_all}
\title{Helpers to work out \code{run_mod_lm()}'s output}
\usage{
pull_mod_rank(mod_out_list)

pull_mod_best(rank_df)

pull_mod_coeff(mod_out_list)

pull_mod_fit(mod_out_list)

pull_mod_coeff_all(tbl, mod_const = tb_mod_const)
}
\arguments{
\item{mod_out_list}{A list object as returned by \code{\link[=run_mod_lm]{run_mod_lm()}}.}

\item{rank_df}{A tibble as returned by \code{\link[=pull_mod_rank]{pull_mod_rank()}}.}

\item{tbl}{Input data frame containing the data to model.}

\item{mod_const}{Default models specs as returned by the list \code{tb_mod_const}.}
}
\value{
\code{pull_mod_rank()} returns a tibble.

\code{pull_mod_best()} returns a character of length one.

\code{pull_mod_coeff()} returns a tibble.

\code{pull_mod_fit()} returns an object of class \verb{_lm}.

\code{pull_mod_coeff_all()} returns a tibble.
}
\description{
The following helpers extract elements of the list returned by \code{\link[=run_mod_lm]{run_mod_lm()}}.

\code{pull_mod_rank()} extracts a tibble summarising the ranking of pre-processing
steps measured according to \code{rank_metric} chosen in \code{\link[=run_mod_lm]{run_mod_lm()}}.

\code{pull_mod_best()} extract the best model id.

\code{pull_mod_coeff()} extracts best model coefficient estimates.

\code{pull_mod_fit()} extracts the best model object.

\code{pull_mod_coeff_all()} extracts coefficients estimates referenced by year.
}
\examples{
\dontrun{
preproc_list <- get_mod_preproc(
  .tbl = tbl,
  .neighbors = 5,
  .threshold = 0.25,
  .impute_with = c("gdp", "e_inc_num", "pop_total")
 )

mod_objects <- run_mod_lm(
  tbl,
  preproc = preproc_list,
  folds = 10,
  metrics = yardstick::metric_set(yardstick::rmse, yardstick::rsq),
  rank_metric = "rmse"
)
pull_mod_rank(mod_objects)
}
\dontrun{
pull_mod_rank(mod_objects) |>
  pull_mod_best()
}
\dontrun{
pull_mod_coeff(mod_objects)
}
\dontrun{
lm_obj <- pull_mod_fit(mod_objects)
plot_check <- performance::check_model(
  lm_obj,
  check = c("linearity", "normality", "qq", "outliers"),
  theme = "ggplot2::theme_minimal"
)
}
\dontrun{
tbl <-
  build_tbl(
    "tb",
    estimated = "who_estimates.e_inc_num",
    notified = "who_notifications.c_newinc",
    year = NULL,
    vars = dxgap_const$tb_vars
  ) |>
  dplyr::mutate(is_hbc = forcats::as_factor(is_hbc)) |>
  dplyr::select(-any_of(c("country")))
coeff_df <- pull_mod_coeff_all(tbl)
}
}
